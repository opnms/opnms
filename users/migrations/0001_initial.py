# Generated by Django 2.0 on 2018-01-21 08:40

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=11, verbose_name='Phone')),
                ('wechat', models.CharField(max_length=30, verbose_name='Wechat')),
                ('dingding', models.CharField(max_length=25, verbose_name='dingding')),
                ('job_number', models.CharField(max_length=10, verbose_name='Job number')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Create time')),
                ('create_by', models.CharField(default='admin', max_length=30, verbose_name='Create by')),
            ],
            options={
                'ordering': ['username'],
                'permissions': (('view_user', 'Can see available users'), ('change_user_status', 'Can change the status of users'), ('close_user', 'Can remove a user by setting its status as closed')),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='guest', max_length=30, unique=True, verbose_name='Department')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('create_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Create at')),
                ('create_by', models.CharField(default='admin', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True, verbose_name='GroupName')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('create_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Create at')),
                ('create_by', models.CharField(default='admin', max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ManyToManyField(to='users.Department', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='user',
            name='group',
            field=models.ManyToManyField(to='users.UserGroup', verbose_name='User Group'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
